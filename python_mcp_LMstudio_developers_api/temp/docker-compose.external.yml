services:
  artifacts:
    image: python:3.11-slim
    container_name: artifacts_http_ext
    network_mode: host
    working_dir: /srv
    command: sh -lc "python -m http.server ${ARTIFACTS_PORT} --directory /srv"
    volumes:
      - sandbox_artifacts:/srv
    restart: unless-stopped

  mcp:
    image: python-sandbox-integrated_v2:latest
    container_name: mcp_server_ext
    network_mode: host
    environment:
      PUBLIC_BASE_URL: "http://${HOST_BASE_IP}:${ARTIFACTS_PORT}"
      PUBLIC_BASE_URL_MODE: "plain"
    # IMPORTANT: run ONLY the REST ASGI app (no stdio loop)
    command: ["python", "-m", "uvicorn", "server_rest:app", "--host", "0.0.0.0", "--port", "${MCP_PORT}", "--log-level", "info"]
    volumes:
      - sandbox_artifacts:/app/temp
    restart: unless-stopped

  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
    image: mcp-lmstudio-ui:latest
    container_name: mcp_lmstudio_ui_ext
    network_mode: host
    environment:
      LMSTUDIO_BASE_URL: "http://${HOST_BASE_IP}:${LMSTUDIO_API_PORT}"
      SANDBOX_BASE_URL: "http://${HOST_BASE_IP}:${MCP_PORT}"
      MODEL_NAME: "qwen.qwen3-coder-30b-a3b-instruct"
      GRADIO_SERVER_NAME: "0.0.0.0"
      GRADIO_SERVER_PORT: "${UI_PORT}"
      ARTIFACTS_DIR: "/app/artifacts"
      ARTIFACTS_EXTERNAL_BASE: "http://${HOST_BASE_IP}:${ARTIFACTS_PORT}"

      # Logging (optional)
      UI_LOG_ENABLED: "1"
      UI_LOG_LEVEL: "DEBUG"
      UI_LOG_FORMAT: "json"
      UI_LOG_DIR: "/app/logs"
    volumes:
      - sandbox_artifacts:/app/artifacts
      - /4tbstorage/python_sandbox/ui_logs:/app/logs
    restart: unless-stopped

volumes:
  sandbox_artifacts:
    driver: local

